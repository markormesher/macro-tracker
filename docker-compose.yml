version: '3.3'

services:
  nginx:
    build: ./docker/nginx
    restart: always
    depends_on:
      - api
      - client
    ports:
      - "3008:3008"

  client:
    build:
      context: .
      dockerfile: docker/client/Dockerfile
      args:
        - NPM_FONT_AWESOME_TOKEN=${NPM_FONT_AWESOME_TOKEN}
    restart: always
    depends_on:
      - api
    environment:
      - NPM_EXECPATH=yarn
      - npm_execpath=yarn
      - NPM_FONT_AWESOME_TOKEN=${NPM_FONT_AWESOME_TOKEN}
    volumes:
      - ./logs:/logs

  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
      args:
        - NPM_FONT_AWESOME_TOKEN=${NPM_FONT_AWESOME_TOKEN}
    restart: always
    depends_on:
      - redis
      - postgres_primary
      - postgres_replica_1
      - postgres_replica_2
    secrets:
      - google.client.id
      - google.client.secret
      - nutritionix-api.id
      - nutritionix-api.key
      - postgres.password
      - session.secret
      - tesco-api.key
    environment:
      - NPM_EXECPATH=yarn
      - npm_execpath=yarn
      - RUNNING_IN=docker
      - NPM_FONT_AWESOME_TOKEN=${NPM_FONT_AWESOME_TOKEN}
      - IS_PRIMARY_SERVER=yes
    volumes:
      - ./logs:/logs

  postgres_primary:
    build: ./docker/postgres-primary
    restart: always
    secrets:
      - postgres.password
      - postgres-rep.password
    environment:
      - POSTGRES_DATABASE=macro_tracker
      - POSTGRES_USER=macro_tracker
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres.password
      - POSTGRES_REP_USER=macro_tracker_rep
      - POSTGRES_REP_PASSWORD_FILE=/run/secrets/postgres-rep.password
    volumes:
      - postgres-primary-data:/var/lib/postgresql/data

  postgres_replica_1:
    build: ./docker/postgres-replica
    restart: always
    secrets:
      - postgres.password
      - postgres-rep.password
    environment:
      - POSTGRES_DATABASE=macro_tracker
      - POSTGRES_USER=macro_tracker
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres.password
      - POSTGRES_REP_USER=macro_tracker_rep
      - POSTGRES_REP_PASSWORD_FILE=/run/secrets/postgres-rep.password
    volumes:
      - postgres-replica-1-data:/var/lib/postgresql/data

  postgres_replica_2:
    build: ./docker/postgres-replica
    restart: always
    secrets:
      - postgres.password
      - postgres-rep.password
    environment:
      - POSTGRES_DATABASE=macro_tracker
      - POSTGRES_USER=macro_tracker
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres.password
      - POSTGRES_REP_USER=macro_tracker_rep
      - POSTGRES_REP_PASSWORD_FILE=/run/secrets/postgres-rep.password
    volumes:
      - postgres-replica-2-data:/var/lib/postgresql/data

  redis:
    image: redis:3.2-alpine
    restart: always
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data

volumes:
  postgres-primary-data:
  postgres-replica-1-data:
  postgres-replica-2-data:
  redis-data:

secrets:
  google.client.id:
    file: ./src/api/config/secrets/google.client.id
  google.client.secret:
    file: ./src/api/config/secrets/google.client.secret
  nutritionix-api.id:
    file: ./src/api/config/secrets/nutritionix-api.id
  nutritionix-api.key:
    file: ./src/api/config/secrets/nutritionix-api.key
  postgres.password:
    file: ./src/api/config/secrets/postgres.password
  postgres-rep.password:
    file: ./src/api/config/secrets/postgres-rep.password
  session.secret:
    file: ./src/api/config/secrets/session.secret
  tesco-api.key:
    file: ./src/api/config/secrets/tesco-api.key
