version: 2

defaults: &defaults
  working_directory: ~/macro-tracker
  docker:
    - image: circleci/node:dubnium

jobs:
  setup:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            # components are ordered least- to most-often updated
            - dependency-cache-{{ checksum ".scripts/get-private-packages.sh" }}-{{ checksum "package.json-versionless" }}-{{ checksum "yarn.lock" }}
            - dependency-cache-{{ checksum ".scripts/get-private-packages.sh" }}-{{ checksum "package.json-versionless" }}
            - dependency-cache-{{ checksum ".scripts/get-private-packages.sh" }}
            - dependency-cache-
      - run:
          name: Download private packages
          command: ./.scripts/get-private-packages.sh
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum ".scripts/get-private-packages.sh" }}-{{ checksum "package.json-versionless" }}-{{ checksum "yarn.lock" }}
          paths:
            - private-packages
            - node_modules
      - persist_to_workspace:
          root: .
          paths:
            - .

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Check linters
          command: yarn lint

  check-lockfile:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run lockfile linter
          command: yarn lockfile-lint -p yarn.lock
      - run:
          name: Check for duplicate dependencies
          command: yarn yarn-deduplicate -f -l

  bundlewatch:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Build client packages
          command: yarn build-client
      - run:
          name: Remove non-shipped files
          command: ./.bundlewatch/remove-non-watched-files.sh
      - run:
          name: Run BundleWatch
          command: yarn bundlewatch

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run Tests
          command: yarn test
      - run:
          name: Copy/Upload Results
          command: |
            mkdir -p ./test-results/mocha
            [[ -e ./test-results.xml ]] && cp ./test-results.xml ./test-results/mocha/test-results.xml
            bash <(curl -s https://codecov.io/bash)
      - store_test_results:
          path: test-results

workflows:
  version: 2
  build_test:
    jobs:
      - setup:
          filters:
            tags:
              only: /.*/
      - lint:
          filters:
            tags:
              only: /.*/
          requires:
            - setup
      - check-lockfile:
          filters:
            tags:
              only: /.*/
          requires:
            - setup
      - bundlewatch:
          filters:
            tags:
              only: /.*/
          requires:
            - setup
      - test:
          filters:
            tags:
              only: /.*/
          requires:
            - lint
            - check-lockfile
